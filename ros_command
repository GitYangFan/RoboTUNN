0. Linux commends
# show/hide the hidden files: ctrl+h

# source the target ros setup file
source ./devel/setup.bash

# show the node relationship
rqt_graph

# rviz
rviz

# Compile the package
catkin_make

# show the list of topic
rostopic list

# check the tf tree
rosrun rqt_tf_tree rqt_tf_tree

# observe specific topic
rostopic echo /rtabmap/odom

# install the resource/dependency
sudo apt install ros-noetic-lms1xx  # no underline

# use the vim editor
vim base_movement.py
inserte mode: press i
command mode: press :
jump to line: 10G (to the line 10)

##### Husky #####

# ssh connect to the Husky
ssh icom@192.168.0.108

# manually tf transformation
rosrun tf static_transform_publisher 1 0 0 0 0 0 map base_link 10

# activate the LiDAR sensor on husky
export HUSKY_UST10_ENABLED=1
HUSKY_UST10_ENABLED 1  # edit in the husky.urdf.xacro

# step1: run the gazebo simulation of husky
roslaunch husky_gazebo husky_playpen.launch
roslaunch husky_gazebo empty_world.launch

# step2: run the navigation and gmapping
roslaunch husky_navigation gmapping_demo.launch

# step3: run the rviz environment for husky
roslaunch husky_viz view_robot.launch

# run the husky navigation node (not preferred)
roslaunch husky_cartographer_navigation cartographer_demo.launch

# publish cmd_vel command
rostopic pub /husky_velocity_controller/cmd_vel geometry_msgs/Twist "linear:
  x: 0.0
  y: 0.0
  z: 0.0
angular:
  x: 0.0
  y: 0.0
  z: 0.1" -r 10

# run the python3 script
python3 base_movement.py


##### Unitree #####

# step1: run the unitree gazebo simulation
roslaunch unitree_guide gazeboSim.launch rname:=b2
roslaunch unitree_move_base gazebo_move_base.launch rname:=b2

# step2: run the keyboard controller
sudo ~/catkin_ws_unitree/devel/lib/unitree_guide/junior_ctrl

# step3: start the unitree rviz window
roslaunch unitree_move_base rvizMoveBase.launch

# step4: transform the base to base_link
rosrun tf static_transform_publisher 0 0 0 0 0 0 base base_link 10

# step5: start the gmapping for 2D mapping
rosrun gmapping slam_gmapping /scan:=/scan

# start the rtabmap_ros for 3D mapping
rosrun rtabmap_ros rtabmap /odom:=/odom /rgb/image:=/camera_face/color/image_raw /depth/image:=/camera_face/depth/image_raw /rgb/camera_info:=/camera_face/color/camera_info

# transform the PointCloud to LaserScan
roslaunch unitree_move_base pointCloud2LaserScan.launch

cd ~/catkin_ws/src/rtabmap_ros/rtabmap_demos/launch/

# when install the lcm library !!! change the Python to Python3 !!!
# Python
lcm_option(
  LCM_ENABLE_PYTHON
  "Build Python bindings and utilities"
  PYTHON_FOUND Python3)
if(LCM_ENABLE_PYTHON)
  add_subdirectory(lcm-python)
endif()
